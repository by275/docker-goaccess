name: buildx

on:
  push:
    branches:
      - 'main'
  workflow_dispatch:
  schedule:
    - cron: "45 */6 * * *"

env:
  IMAGE_NAME: ghcr.io/by275/traefik

jobs:
  buildx:
    runs-on: ubuntu-22.04
    steps:
      -
        name: Check if buildx required
        run: |
          if [ $GITHUB_EVENT_NAME = "schedule" ]; then
            docker run -i --entrypoint=/bin/cp -v ${PWD}:/abc traefik:latest \
              /usr/local/bin/traefik /abc/traefik1
            docker run -i --entrypoint=/bin/cp -v ${PWD}:/abc ${{ env.IMAGE_NAME }}:latest \
              /usr/local/bin/traefik /abc/traefik2
            if cmp -s traefik1 traefik2 ; then X_SKIP=true ; else X_SKIP=false ; fi
          else
            X_SKIP=false
          fi
          echo "X_SKIP=$X_SKIP" >> $GITHUB_ENV
      -
        name: Checkout
        if: env.X_SKIP == 'false'
        uses: actions/checkout@v4
      -
        name: Set up QEMU
        if: env.X_SKIP == 'false'
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Buildx
        if: env.X_SKIP == 'false'
        uses: docker/setup-buildx-action@v3
      -
        name: Initial Buildx
        if: env.X_SKIP == 'false'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          tags: ${{ env.IMAGE_NAME }}:testing
          platforms: linux/amd64,linux/arm/v7,linux/arm64
      -
        name: Load Built Image and Get Variables
        if: env.X_SKIP == 'false'
        run: |
          docker buildx build \
            -t ${{ env.IMAGE_NAME }}:testing \
            --platform=linux/amd64 \
            --load \
            .
          CID=$(docker run -d ${{ env.IMAGE_NAME }}:testing)
          VER=$(docker exec $CID traefik version | head -n1 | awk '{print $2}')
          docker rm -f $CID
          echo "APP_VER=$VER" >> $GITHUB_ENV
      -
        name: Login to ghcr.io
        if: env.X_SKIP == 'false'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Buildx and Push
        if: env.X_SKIP == 'false'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ env.APP_VER }}
          platforms: linux/amd64,linux/arm/v7,linux/arm64
          push: true
      -
        name: Notification
        uses: sarisia/actions-status-discord@v1
        if: env.X_SKIP == 'false' && always()
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          status: ${{ job.status }}
          description: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ env.APP_VER }}
