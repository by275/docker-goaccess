name: buildx

on:
  push:
    branches:
      - 'main'
  pull_request:
  workflow_dispatch:

env:
  IMAGE_NAME: ghcr.io/by275/goaccess

jobs:
  buildx:
    runs-on: ubuntu-20.04
    if: github.event_name != 'pull_request'
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Initial Buildx
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile
          tags: ${{ env.IMAGE_NAME }}:testing
          platforms: linux/amd64,linux/arm/v7,linux/arm64
      -
        name: Load Built Image and Get Variables
        id: vars
        run: |
          docker buildx build \
            -t ${{ env.IMAGE_NAME }}:testing \
            --platform=linux/amd64 \
            --load \
            .
          CID=$(docker run -d ${{ env.IMAGE_NAME }}:testing)
          VER=$(docker exec $CID goaccess --version | head -n1 | awk '{print $3}' | sed 's/\.$//')
          docker rm -f $CID
          echo "APP_VER=$VER" >> $GITHUB_ENV
      -
        name: Login to ghcr.io
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_PAT }}
      -
        name: Buildx and Push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ env.APP_VER }}
          platforms: linux/amd64,linux/arm/v7,linux/arm64
          push: true
      -
        name: Notification
        uses: sarisia/actions-status-discord@v1
        if: always()
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          status: ${{ job.status }}
          description: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ env.APP_VER }}

  buildx-on-pr:
    runs-on: ubuntu-20.04
    if: github.event_name == 'pull_request'
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Initial Buildx
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile
          tags: ${{ env.IMAGE_NAME }}:testing
          platforms: linux/amd64,linux/arm/v7,linux/arm64
      -
        name: Login to ghcr.io
        uses: docker/login-action@v2
        if: github.actor == github.event.repository.owner.login
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_PAT }}
      -
        name: Buildx and Push
        uses: docker/build-push-action@v3
        if: github.actor == github.event.repository.owner.login
        with:
          context: .
          file: Dockerfile
          tags: |
            ${{ env.IMAGE_NAME }}:testing
            ${{ env.IMAGE_NAME }}:testing-${{ github.event.pull_request.number }}
          platforms: linux/amd64,linux/arm/v7,linux/arm64
          push: true
      -
        name: Notification
        uses: sarisia/actions-status-discord@v1
        if: always() && github.actor == github.event.repository.owner.login
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          status: ${{ job.status }}
          description: |
            ${{ env.IMAGE_NAME }}:testing
            ${{ env.IMAGE_NAME }}:testing-${{ github.event.pull_request.number }}
